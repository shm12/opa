name: PR Check

on: [push]

# When a new revision is pushed to a PR, cancel all in-progress CI runs for that
# PR. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # All jobs essentially re-create the `ci-release-test` make target, but are split
  # up for parallel runners for faster PR feedback and a nicer UX.
  generate:
    name: Generate Code
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Generate
        run: make clean generate

      - name: Upload generated artifacts
        uses: actions/upload-artifact@v3
        with:
          name: generated
          path: |
            internal/compiler/wasm/opa
            capabilities.json

  go-build:
    name: Go Build (${{ matrix.os }}${{ matrix.arch && format(' {0}', matrix.arch) || '' }})
    runs-on: ${{ matrix.run }}
    needs: generate
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            run: ubuntu-22.04
            targets: ci-go-ci-build-linux ci-go-ci-build-linux-static
            arch: amd64
          - os: linux
            run: ubuntu-22.04
            targets: ci-go-ci-build-linux-static
            arch: arm64
          - os: windows
            run: ubuntu-22.04
            targets: ci-go-ci-build-windows
          - os: darwin
            run: macos-latest
            targets: ci-build-darwin ci-build-darwin-arm64-static
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - id: go_version
        name: Read go version
        run: echo "go_version=$(cat .go-version)" >> $GITHUB_OUTPUT

      - name: Install Go (${{ steps.go_version.outputs.go_version }})
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
        if: matrix.os == 'darwin'

      - name: Download generated artifacts
        uses: actions/download-artifact@v3
        with:
          name: generated

      - name: Build
        run: make ${{ matrix.targets }}
        env:
          GOARCH: ${{ matrix.arch }}
        timeout-minutes: 30

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: binaries
          path: _release

 
  check-generated:
    name: Check Generated
    runs-on: ubuntu-22.04
    needs: generate
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download generated artifacts
        uses: actions/download-artifact@v3
        with:
          name: generated

      - name: Check Working Copy
        run: make ci-check-working-copy
        timeout-minutes: 15
        env:
          DOCKER_RUNNING: 0

  smoke-test-binaries:
    runs-on: ${{ matrix.os }}
    needs: go-build
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            exec: opa_linux_amd64
          - os: ubuntu-22.04
            exec: opa_linux_amd64_static
            wasm: disabled
          - os: macos-latest
            exec: opa_darwin_amd64
          - os: windows-latest
            exec: opa_windows_amd64.exe

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download release binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: _release

      - name: Test binaries (Rego)
        run: make ci-binary-smoke-test-rego BINARY=${{ matrix.exec }}

      - name: Test binaries (Wasm)
        run: make ci-binary-smoke-test-wasm BINARY=${{ matrix.exec }}
        if: matrix.wasm != 'disabled'

  go-version-build:
    name: Go compat build/test
    needs: generate
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest]
        version: ["1.18", "1.17"]
    steps:
      - uses: actions/checkout@v3
      - name: Download generated artifacts
        uses: actions/download-artifact@v3
        with:
          name: generated
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.version }}
      - run: make build
        env:
          DOCKER_RUNNING: 0
      - run: make go-test
        env:
          DOCKER_RUNNING: 0

